package Div2_670;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.HashSet;
import java.util.StringTokenizer;

public class A {
	public static int mex(int[] arr, int i, int j) {
		HashSet<Integer> set=new HashSet<>();
		for(int k=i;k<=j;k++) {
			set.add(arr[k]);
		}
		for(int k=0;k<=set.size();k++) {
			if(!set.contains(k))
				return k;
		}
		return set.size();
	}

	public static void main(String[] args) {
		MyScanner s = new MyScanner();
		out = new PrintWriter(new BufferedOutputStream(System.out));
		int t=s.nextInt();
		while(t-->0) {
			int n=s.nextInt();
			int[] arr=new int[n];
			int[] maxleft=new int[n+2];
			for(int i=0;i<n;i++) {
				arr[i]=s.nextInt();
				if(i==0) {
					maxleft[i+1]=arr[i];
				}
				else
				maxleft[i]=Math.max(maxleft[i-1], arr[i]);
			}
			int[] maxright=new int[n+2];
			maxright[n]=arr[n-1];
			for(int i=n-2;i>=0;i--) {
				maxright[i+1]=Math.max(maxright[i+2], arr[i]);
			}
			int max=Integer.MIN_VALUE;
			for(int i=1;i<=n;i++) {
				max=Math.max(max, maxleft[i]+maxright[i+1]);
			}
			System.out.println(max);
			
			
			
		}
		
		out.close();
	}
	
	public static PrintWriter out;
	
	public static class MyScanner {
		BufferedReader br;
		StringTokenizer st;
		
		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		double nextDouble() {
			return Double.parseDouble(next());
		}
		
		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
		
	}
	public static class FastScanner {
		BufferedReader br;
		StringTokenizer st;
		
		public FastScanner(String s) {
			try {
				br = new BufferedReader(new FileReader(s));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}
		
		public FastScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		String nextToken() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(nextToken());
		}
		
		long nextLong() {
			return Long.parseLong(nextToken());
		}
		
		double nextDouble() {
			return Double.parseDouble(nextToken());
		}

	}

}
