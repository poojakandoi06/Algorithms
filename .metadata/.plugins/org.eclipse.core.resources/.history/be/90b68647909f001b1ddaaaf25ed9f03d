import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class codejam2021 {

	public static void main(String[] args) {
		MyScanner s = new MyScanner();
		out = new PrintWriter(new BufferedOutputStream(System.out));
		int t=s.nextInt();
		for(int k=1;k<=t;k++) {
			String str=s.next();
			
			int res=dfs(str,1, 0, str.length()-1);
			if(res>0)
			out.println("Case #"+k+": "+"I"+" "+Math.abs(res));
			else {
			out.println("Case #"+k+": "+"O"+" "+Math.abs(res));

			}
		}
		
		
		
		out.close();
	}
	
	public static int dfs(String str, int turn, int i, int j) {
		char val=turn==1?'I':'O';
		if(i>j) {
			return -1;
		}
		else if(str.charAt(i)!=val && str.charAt(j)!=val) {
			return -(j-i+1);
		}
		int max=Integer.MIN_VALUE;
		if(str.charAt(i)==val) {
			max=Math.max(max, dfs(str,1-turn,i+1,j));
		}
		if(str.charAt(j)==val) {
			max=Math.max(max, dfs(str,1-turn,i,j-1));
		}
		return max;
		
	}
	public static PrintWriter out;
	
	public static class MyScanner {
		BufferedReader br;
		StringTokenizer st;
		
		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		double nextDouble() {
			return Double.parseDouble(next());
		}
		
		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
		
		
		

	}

}
