package lru;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;

public class Codechef {

	public static void main(String[] args) {
		try {

			Scanner s = new Scanner(System.in);
			int t = s.nextInt();
			while (t-- > 0) {
				int n=s.nextInt();
				int k=s.nextInt();
				int[] arr=new int[n];
				for(int i=0;i<n;i++) {
					arr[i]=s.nextInt();
				}
				int max=dfs(arr,0,new HashSet<Integer>(),k);
				
			}

		} catch (Exception e) {
			return;
		}

	}

	private static int dfs(int[] arr, int i, HashSet<Integer> set, int k) {
		if(i==arr.length)
			return 0;
		int max=Integer.MAX_VALUE;
		int extra=0;
		if(set.contains(arr[i])) {
			
			HashSet<Integer> newset=new HashSet<>();
			newset.add(arr[i]);
			max=Math.min(k+dfs(arr,i+1,newset,k),max);
		}
		
		
	}

}
